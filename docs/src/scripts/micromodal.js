const MicroModal=(()=>{"use strict";const t=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'],i={openTrigger:"data-micromodal-trigger",identifier:"data-micromodal-id"},s={},n=[];class o{constructor({targetModal:e,triggers:t=[],onShow:o=()=>{},onClose:i=()=>{},openTrigger:s="data-micromodal-trigger",closeTrigger:n="data-micromodal-close",openClass:a="is-open",disableScroll:l=!1,disableFocus:r=!1,awaitCloseAnimation:d=!1,awaitOpenAnimation:c=!1,debugMode:h=!1}){this.modal="string"==typeof e?document.getElementById(e):e,this.modalId=null,this.config={debugMode:h,disableScroll:l,openTrigger:s,closeTrigger:n,openClass:a,onShow:o,onClose:i,awaitCloseAnimation:d,awaitOpenAnimation:c,disableFocus:r},this.showModal=this.showModal.bind(this),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this),this.triggers=t,this.registerTriggers()}registerTriggers(){this.triggers.filter(Boolean).forEach(e=>{e.addEventListener("click",this.showModal)})}unregisterTriggers(){this.triggers.filter(Boolean).forEach(e=>{e.removeEventListener("click",this.showModal)})}showModal(e=null){if(this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),this.modal.classList.add(this.config.openClass),this.scrollBehaviour("disable"),this.addEventListeners(),-1===n.indexOf(this.modalId)&&n.push(this.modalId),this.config.awaitOpenAnimation){const t=()=>{this.modal.removeEventListener("animationend",t,!1),this.setFocusToFirstNode()};this.modal.addEventListener("animationend",t,!1)}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement,e)}closeModal(e=null){const t=this.modal;this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable");var o=n.indexOf(this.modalId);if(-1<o&&n.splice(o,1),this.activeElement&&this.activeElement.focus&&this.activeElement.focus(),this.config.onClose(this.modal,this.activeElement,e),this.config.awaitCloseAnimation){const i=this.config.openClass;this.modal.addEventListener("animationend",function e(){t.classList.remove(i),t.removeEventListener("animationend",e,!1)},!1)}else t.classList.remove(this.config.openClass)}scrollBehaviour(e){if(this.config.disableScroll){var t=document.querySelector("body");switch(e){case"enable":Object.assign(t.style,{overflow:""});break;case"disable":Object.assign(t.style,{overflow:"hidden"})}}}addEventListeners(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),this.modal.addEventListener("keydown",this.onKeydown)}removeEventListeners(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),this.modal.removeEventListener("keydown",this.onKeydown)}onClick(e){(e.target.hasAttribute(this.config.closeTrigger)||e.target.parentNode.hasAttribute(this.config.closeTrigger))&&(e.preventDefault(),e.stopPropagation(),this.closeModal(e))}onKeydown(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.retainFocus(e)}getFocusableNodes(){var e=this.modal.querySelectorAll(t);return Array(...e)}setFocusToFirstNode(){var e,t;this.config.disableFocus||0!==(e=this.getFocusableNodes()).length&&(0<(t=e.filter(e=>!e.hasAttribute(this.config.closeTrigger))).length&&t[0].focus(),0===t.length)&&e[0].focus()}retainFocus(e){let t=this.getFocusableNodes();var o;0!==t.length&&(t=t.filter(e=>null!==e.offsetParent),this.modal.contains(document.activeElement)?(o=t.indexOf(document.activeElement),e.shiftKey&&0===o&&(t[t.length-1].focus(),e.preventDefault()),!e.shiftKey&&0<t.length&&o===t.length-1&&(t[0].focus(),e.preventDefault())):t[0].focus())}}const a=(e,t=!0)=>{let o;return!!(o=t?void 0!==s[e]:"string"==typeof e?null!==document.getElementById(e):e)||(console.warn(`MicroModal: ❗Seems like you have missed %c'${e}'%c ID somewhere in your code. Refer example below to resolve it.

`+`%cExample:%c <div class="modal" id="${e}"></div>`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","","background-color: #f8f9fa;color: #50596c;font-weight: bold;",""),!1)};const l=(e,t)=>{t.debugMode&&!1===a(t.targetModal,!1)||(s[e]=new o(t),s[e].modal.setAttribute(i.identifier,e),s[e].modalId=e)},r=e=>"string"==typeof e?e:e.attributes[i.identifier].value,d=(e,t)=>{e=r(e);Object.assign(s[e].config,t)};return{init:e=>{Object.assign(i,e);e=[...document.querySelectorAll(`[${i.openTrigger}]`)];const o=((e,o)=>{const i=[];return e.forEach(e=>{var t=e.attributes[o].value;void 0===i[t]&&(i[t]=[]),i[t].push(e)}),i})(e,i.openTrigger);!0===i.debugMode&&!1==!(e.length<=0&&(console.warn('MicroModal: ❗Please specify at least one %c\'micromodal-trigger\'%c data attribute.\n\n%cExample:%c <a href="#" data-micromodal-trigger="my-modal"></a>',"background-color: #f8f9fa;color: #50596c;font-weight: bold;","","background-color: #f8f9fa;color: #50596c;font-weight: bold;",""),1))||Object.keys(o).forEach(e=>{var t=o[e];i.targetModal=e,i.triggers=[...t],l(e,i)})},initModal:l,config:d,show:(e,t)=>{var o=r(e);s[o]?(t&&d(e,t),s[o].removeEventListeners()):l(o,Object.assign(i,{targetModal:e},t)),s[o].showModal()},close:e=>{0!==n.length&&(e?(e=r(e),-1<n.indexOf(e)&&s[e].closeModal()):s[n[n.length-1]].closeModal())},closeAll:()=>{for(let e=n.length-1;0<=e;e--)s[n[e]].closeModal()},removeModal:e=>{var e=r(e),t=s[e];t&&(-1<n.indexOf(e)&&t.closeModal(),t.removeEventListeners(),t.unregisterTriggers(),delete s[e])}}})();export default MicroModal;"undefined"!=typeof window&&(window.MicroModal=MicroModal);